struc MSGHEADER {
    uint8_t  sigprg[8] = {0xFF, 0x4D, 0x4B, 0x4D, 0x53, 0x47, 0x46, 0x00};
    uint8_t  ident[3]  = {0x00, 0x00, 0x00};
    uint16_t numb_msgs = 0x00;
    uint16_t start_msg = 0x00;
    uint8_t  offset    = 0x00;
    uint16_t version   = 0x00;
    uint16_t hdrsize   = 0x00;
    uint16_t codepag   = 0x00;   // ptr of code pages of root msg file
    uint32_t extrahdr  = 0x0000; // offset to ext.header if !=0 | if it's sub, this offset = 0
    uint8_t  resrved   = {0x00, 0x00, 0x00, 0x00, 0x00};
} MsgHeader;

The new code page data will be needed when the CP_DATA field is non zero.
The data structure of the new code page data is,

codepag
    ;  --------------------------------------------------------
    ;  Message file definition records
		    DB	 ?	    ; CP type 1=sbcs, 2=dbcs
		    DW	 ?	    ; Country ID
		    DW	 ?	    ; Language ID: language family
		    DW	 ?	    ;		   language version
		    DW	 ?	    ; CP count
		    DW	 16 dup(0)  ; CP IDs  (maximum 16 code pages)
		    DB	 MAXPATHLEN ; ASCII file name
		    DB	 0	    ; ASCIIZ string zero byte
    ;  --------------------------------------------------------

The new extended header will be needed when the EXT.HEADER field is not zero.
The data structure of the new extended header is,

extrahdr
    ;  --------------------------------------------------------
    ; File header extension for multi_CP message files follows:
		    DW	 ?	    ; Header length
		    DW	 ?	    ; number of file definition records (>= 1)
    ;  --------------------------------------------------------
    ;  Message file definition records
		    DB	 ?	    ; CP type 1=sbcs, 2=dbcs
		    DW	 ?	    ; Country ID
		    DW	 ?	    ; Language ID: language family
		    DW	 ?	    ;		   language version
		    DW	 ?	    ; CP count
		    DW	 16 dup(0)  ; CP IDs  (maximum 16 code pages)
		    DB	 MAXPATHLEN ; ASCII file name
		    DB	 0	    ; ASCIIZ string zero byte
    ;	Repeat definition for each additional message file entry
    ;  --------------------------------------------------------

http://www.edm2.com/index.php/Driver

 "decompiles" MKMSGF MSG files called e_msgf.zip
https://hobbes.nmsu.edu/download/pub/os2/util/convert/e_msgf.zip

https://mark0.net/forum/index.php?topic=794.0

http://www.edm2.com/index.php/Veit_Kannegieser

http://www.edm2.com/index.php/Main_Page

http://www.edm2.com/index.php/DosGetCp

Nine replacements are based on DosInsertMessage (DosInsMessage)
https://books.google.com.ec/books?id=u7WbsmbttwYC&lpg=PT372&dq=Changes%20in%20the%20OS%2F2%202.0%20API&pg=PT372#v=onepage&q=Changes%20in%20the%20OS%2F2%202.0%20API&f=false

https://www.jj2007.eu/MasmBasicQuickReference.htm
eq=equal, ne=not equal - ab=above, ae=above or equal

        .if     <[subfile_flag] eq 0> AND
        .if     <[msgf_header.version] AE 2> AND
        .if     <[msgf_header.cp_data] NE 0>

if ( (subfile_flag == 0) && (msgf_header.version => 2) && (msgf_header.cp_data != 0) )

; **********************************************************************
; STRUCTURES
; **********************************************************************
;  Message file header
;  -------------------
HEADER	STRUC					;MSG FILE HEADER
	SIGNATURE_H	DB	8 DUP (?)	;SIGNATURE MARK
	COMPONENT_ID	DB	3 DUP (?)	;COMPONENT ID
	MSG_COUNT	DW	?		;NUMBER OF MESSAGES
	BASE_MID	DW	?		;BASE MESSAGE NUMBER
	INDICATOR	DB	?		;TYPE, 1=WORD OFFSET
						;      0=DWORD OFFSET
	VERSION 	DW	?		;VERSION NUMBER
	HEADER_LENGTH	DW	?		;LENGTH OF HEADER IN BYTES
	CP_DATA 	DW	?		;OFFSET TO CODE PAGEs OF FILE
	EXT_HEADER	DD	?		;OFFSET TO EXT.HEADER IF<>0
	RESERVED	DB	5 DUP(?)	;RESERVED
HEADER	ENDS
